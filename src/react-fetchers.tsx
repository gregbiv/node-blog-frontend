/* Generated by restful-react */

import React from "react";
import { Get, GetProps, Mutate, MutateProps } from "restful-react";

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface Post {title: string; description: string; userId: number; tags: string[]}

export interface User {name: string; email: string; password: string; roleId?: number}

export interface ValidationError {field: string; message: string}

export interface ErrorResponse {errors: ValidationError[]}

export interface PostResponse {take: number; skip: number; count: number; total: number; items: Post[]}

export type CreatePostProps = Omit<MutateProps<void, unknown, void, Post>, "path" | "verb">;


export const CreatePost = (props: CreatePostProps) => (
  <Mutate<void, unknown, void, Post>
    verb="POST"
    path={`/posts`}
    {...props}
  />
);


export interface GetPostQueryParams {perPage?: string; page?: string; order?: string}

export type GetPostProps = Omit<GetProps<PostResponse, void, GetPostQueryParams>, "path">;


export const GetPost = (props: GetPostProps) => (
  <Get<PostResponse, void, GetPostQueryParams>
    path={`/posts`}
    {...props}
  />
);


export type RemovePostProps = Omit<MutateProps<void, void, void, void>, "path" | "verb">;


export const RemovePost = (props: RemovePostProps) => (
  <Mutate<void, void, void, void>
    verb="DELETE"
    path={`/posts`}
    {...props}
  />
);


export type RegisterUserProps = Omit<MutateProps<void, ErrorResponse, void, User>, "path" | "verb">;


export const RegisterUser = (props: RegisterUserProps) => (
  <Mutate<void, ErrorResponse, void, User>
    verb="POST"
    path={`/register`}
    {...props}
  />
);

